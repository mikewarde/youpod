var fs = require('fs');
var path  = require('path');
var jq = require('jquery');
var shell = require('shelljs') 
var RSS = require('rss'); 

function ffprobe(file){
    let command = `ffprobe -v quiet -print_format json  -show_streams ${file}`;
    return JSON.parse(shell.exec(command).stdout);  	
} 


function generate_rss(folder ) {
	const directoryPath = path.join(__dirname, folder);
	let rss = new RSS({
		title: folder,
		custom_namespaces: {
      			'itunes': 'http://www.itunes.com/dtds/podcast-1.0.dtd'
    		}, 
		custom_elements: [
      		{'itunes:subtitle': ''},
      		{'itunes:author': 'YouPod'},
      		{'itunes:summary': 'Generated By YouPod'},
      		{'itunes:owner': [
        		{'itunes:name': ''},
        		{'itunes:email': ''}
      		]},
      		{'itunes:image': {
        		_attr: {
         	 		href: ''
        		}
      		}},
      		{'itunes:category': [
        		{_attr: {
          			text: ''
        		}},
        	{'itunes:category': {
          		_attr: {
            	text: ''
          		}
        	}}
      		]}
   		 ]
	});

	rss.item({title: 'test'});

	//Loop through files in directory;
	files = fs.readdirSync(directoryPath);
		if (!files) {
			return console.log('unable to scan: ' + err); 
		}
		
		files
		 .filter(el => path.extname(el) === '.json')
		 .forEach(function (file) {
			//console.log(directoryPath); 	
			//console.log(file);
			
			let json = fs.readFileSync(directoryPath+'/'+file);
			let pjson = JSON.parse(json);	 
			let mp3path = `${directoryPath}/${pjson.id}.mp3` 
			//console.log(pjson);
			//console.log(ffprobe(mp3path).streams[0].duration) ;  
			
			//Add each file as an item to the rss xml; 
			//console.log('Adding item: ' + pjson.fulltitle); 
			rss.item({    
			title:  pjson.fulltitle,
    			description: '',
    			url: 'http://example.com/article4?this&that', // link to the item
    			categories: ['Category 1','Category 2','Category 3','Category 4'], // optional - array of item categories
    			author: 'Guest Author', // optional - defaults to feed author property
    			date: 'May 27, 2012', // any format that js Date can parse.
    			//enclosure: {url:'...', file:'path-to-file'}, // optional enclosure
    			custom_elements: [
					  {'itunes:author': 'YouPod'},
					  {'itunes:subtitle': ''},
			  		  {'itunes:image': {
						_attr: {
				  			href: ''
						}
			  		}},
			  		{'itunes:duration': '7:04'}
				]})
		});
		
	
	return rss.xml(); 		
}
console.log(generate_rss('news'));

